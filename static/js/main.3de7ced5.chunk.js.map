{"version":3,"sources":["misc/firebase.js","pages/SignIn.js","misc/custom-hooks.js","components/CreateRoomBtnModal.js","context/profile.context.js","misc/helpers.js","components/ProfileAvatar.js","components/dashboard/AvtarUploadBtn.js","components/dashboard/EditableInput.js","components/dashboard/ProviderBlock.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","context/rooms.context.js","components/rooms/RoomItem.js","components/rooms/ChatRoomList.js","components/Sidebar.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","context/current-room-context.js","components/PresenceDot.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/RoomInfobBtnModal.js","components/chat-window/top/index.js","pages/Home/Chat.js","pages/Home/index.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","storage","SignIn","signInWithProvider","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","ref","uid","set","name","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","info","message","Container","Grid","className","Row","Col","xs","md","mdOffset","lg","Panel","Button","block","color","onClick","FacebookAuthProvider","Icon","icon","GoogleAuthProvider","useModalState","defaultValue","useState","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","useEffect","queryList","listener","evt","addEventListener","removeEventListener","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","isLoading","setIsLoading","formRef","useRef","onFormChange","value","onSubmit","current","check","newRoomData","admins","currentUser","push","error","Modal","show","onHide","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","rows","componentClass","Footer","appearance","disabled","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","profile","setProfile","userRef","userStatusRef","authUnsub","onAuthStateChanged","authObj","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","off","Provider","useProfile","useContext","getNameInitials","splitName","toUpperCase","split","length","transformtoArrwithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsg","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","Error","AvtarUploadBtn","img","setImg","avatarEditorRef","onUploadClick","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","image","width","height","border","borderRadius","rotate","EditableInput","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","OnInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","ProviderBlock","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","link","linkWithPopup","Tag","closable","onClose","Dashboard","onSignOut","newData","Drawer","DashboardToggle","ismobile","signOut","catch","err","full","placement","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","RoomItem","room","lastMessage","datetime","Date","author","size","text","ChatRoomList","aboveElHeight","location","useLocation","Nav","vertical","reversed","style","activeKey","pathname","Loader","center","content","speed","Item","Link","to","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","Divider","AttachmentBtnModal","afterUpload","chatId","useParams","filesList","setFilesList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","contentType","url","Uploader","draggable","autoUpload","action","fileList","filesArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","mp3","record","onStop","mimeType","assembleMessage","likeCount","ChatBottom","isloading","setisLoading","onInputChange","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","getColor","presence","getText","toLocaleDateString","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayShow","delayHide","IconButton","ImgBtnModal","fileName","alt","href","rel","ProfileInfoBtnModal","btnProps","memeberSince","renderFileMsg","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","useHover","selfRef","isHovered","isMobile","isAdmin","v","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","memo","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","scrollTop","clientHeight","shouldScrollToBottom","onloadMore","oldHeight","setTimeout","newHeight","adminRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingkKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","EditRoomBtnDrawer","updateData","newName","newDesc","RoomInfobBtnModal","ChatTop","ButtonToolbar","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","ishome","canRenderSidebar","exact","path","PrivateRoute","routeProps","PublicRoute","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3de7ced5.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database'\r\nimport 'firebase/storage'\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyBJ8BIozm8m6Mh625DJyLDjKHrZi--120g',\r\n  authDomain: 'chat-app-3d4b8.firebaseapp.com',\r\n  projectId: 'chat-app-3d4b8',\r\n  storageBucket: 'chat-app-3d4b8.appspot.com',\r\n  messagingSenderId: '874785747372',\r\n  appId: '1:874785747372:web:c2a6c234965321bbc8ca09',\r\n  measurementId: 'G-W0MC2PE2VR',\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nexport const auth = app.auth();\r\nexport const database = app.database('https://chat-app-3d4b8-default-rtdb.asia-southeast1.firebasedatabase.app');\r\nexport const storage = app.storage();","import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { Container, Grid, Panel, Row, Col, Icon, Button, Alert } from 'rsuite';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst SignIn = () => {\r\n  const signInWithProvider = async provider => {\r\n    try {\r\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n      if (additionalUserInfo.isNewUser) {\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n          name: user.displayName,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        });\r\n      }\r\n\r\n      Alert.success('Signed in ', 4000);\r\n    } catch (err) {\r\n      Alert.info(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onFacebookSignIn = () => {\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n  const onGoogleSignIn = () => {\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid className=\"mt-page\">\r\n        <Row>\r\n          <Col xs={24} md={12} mdOffset={6} lg={12}>\r\n            <Panel>\r\n              <div className=\"text-center\">\r\n                <h2>Welcome to Chat</h2>\r\n                <p>Progressive chat platform for Goodness Gracious</p>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <Button block color=\"blue\" onClick={onFacebookSignIn}>\r\n                  <Icon icon=\"facebook\" /> Continue With Facebook\r\n                </Button>\r\n\r\n                <Button block color=\"green\" onClick={onGoogleSignIn}>\r\n                  <Icon icon=\"google\" /> Continue With Google\r\n                </Button>\r\n              </div>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","\r\nimport { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModalState(defaultValue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n  const open = useCallback(() => {\r\n    setIsOpen(true);\r\n  }, []);\r\n  const close = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, []);\r\n  return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addEventListener('change',listener);\r\n    return () => queryList.removeEventListener('change',listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n\r\n  \r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`/status/${uid}`);\r\n\r\n    userStatusRef.on('value', snap => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n\r\n        setPresence(data);\r\n      }\r\n    });\r\n    \r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [ uid ]);\r\n\r\n  \r\n  return presence;\r\n}\r\n\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n  const ref = useRef(null);\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener('mouseover', handleMouseOver);\r\n        node.addEventListener('mouseout', handleMouseOut);\r\n      }\r\n      return () => {\r\n        node.removeEventListener('mouseover', handleMouseOver);\r\n        node.removeEventListener('mouseout', handleMouseOut);\r\n      };\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n  return [ref, value];\r\n}","import React, { useCallback, useRef, useState } from 'react';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  ControlLabel,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  Icon,\r\n  Modal,\r\n  Schema,\r\n} from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useModalState } from '../misc/custom-hooks';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType().isRequired('Chat name is required'),\r\n  description: StringType().isRequired('Description is required'),\r\n});\r\n\r\nconst INITIAL_FORM = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst CreateRoomBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const formRef = useRef();\r\n\r\n  const onFormChange = useCallback(value => {\r\n    setFormValue(value);\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    \r\n    if (!formRef.current.check()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    const newRoomData = {\r\n      ...formValue,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      admins: {\r\n        [auth.currentUser.uid] : true\r\n      }\r\n    };\r\n    try {\r\n      await database.ref('rooms').push(newRoomData);\r\n\r\n      Alert.info(`${formValue.name} has been created`, 4000);\r\n      setIsLoading(false);\r\n      setFormValue(INITIAL_FORM);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-1\">\r\n      <Button block color=\"green\" onClick={open}>\r\n        <Icon icon=\"creative\" /> Create new Chat room\r\n      </Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>New Chat Room</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            fluid\r\n            onChange={onFormChange}\r\n            formValue={formValue}\r\n            model={model}\r\n            ref={formRef}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Room name</ControlLabel>\r\n              <FormControl name=\"name\" placeholder=\"Enter Chat room name...\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Description</ControlLabel>\r\n              <FormControl\r\n                rows={5}\r\n                name=\"description\"\r\n                placeholder=\"Enter the description...\"\r\n                componentClass=\"textarea\"\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"primary\"\r\n            onClick={onSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            Create new chat room\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoomBtnModal;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n\r\n    const authUnsub = auth.onAuthStateChanged(authObj => {\r\n      if (authObj) {\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        \r\n\r\n        userRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val();\r\n\r\n          const data = {\r\n            name,\r\n            createdAt,\r\n            avatar,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n\r\n          setProfile(data);\r\n          setIsLoading(false);\r\n        });\r\n\r\n\r\n        database.ref('.info/connected')\r\n          .on('value', (snapshot) => {\r\n\r\n            if (!!snapshot.val() === false) {\r\n              return;\r\n            }\r\n\r\n            userStatusRef\r\n              .onDisconnect()\r\n              .set(isOfflineForDatabase)\r\n              .then( ()=> {\r\n              \r\n                userStatusRef.set(isOnlineForDatabase);\r\n              });\r\n          });\r\n\r\n      } else {\r\n        if (userRef) {\r\n          userRef.off();\r\n        }\r\n\r\n        if (userStatusRef) {\r\n          userStatusRef.off();\r\n        }\r\n\r\n        database.ref('.info/connected').off();\r\n\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n    return () => {\r\n      authUnsub();\r\n\r\n       database.ref('.info/connected').off();\r\n\r\n      if (userStatusRef) {\r\n        userStatusRef.off();\r\n      }\r\n\r\n      if (userRef) {\r\n        userRef.off();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ isLoading, profile }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProfile = () => useContext(ProfileContext);\r\n","export function getNameInitials(name) {\r\n  const splitName = name.toUpperCase().split(' ');\r\n\r\n  if (splitName.length > 1) {\r\n    return splitName[0][0] + splitName[1][0];\r\n  }\r\n  return splitName[0][0];\r\n}\r\n\r\nexport function transformtoArrwithId(snapVal) {\r\n  return snapVal\r\n    ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId };\r\n      })\r\n    : [];\r\n}\r\n\r\nexport function transformtoArr(snapVal) {\r\n  return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {};\r\n\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsg = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid') \r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const [mSnap, rSnap] = await Promise.all([getMsg, getRooms]);\r\n\r\n  mSnap.forEach(msgSnap => {\r\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  rSnap.forEach(roomSnap => {\r\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  return updates;\r\n}\r\n\r\nexport function groupBy(array, groupingkKeyFn) {\r\n  return array.reduce((result, item) => {\r\n    \r\n    const groupingKey = groupingkKeyFn(item);\r\n\r\n    if (!result[groupingKey]) {\r\n      result[ groupingKey ] = [];\r\n    }\r\n\r\n    result[ groupingKey ].push(item);\r\n    \r\n    return result;\r\n  }, {})\r\n\r\n}","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameInitials } from '../misc/helpers';\r\n\r\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\r\n  return <Avatar circle {...avatarProps}>{getNameInitials(name)}</Avatar>;\r\n};\r\n\r\nexport default ProfileAvatar;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Alert, Button, Modal } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { database, storage } from '../../misc/firebase';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst fileInputTypes = '.png, .jpeg, .jpg';\r\n\r\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\r\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\r\n\r\n// Check the video again for blob\r\n\r\nconst getBlob = canvas => {\r\n  return new Promise((resolve, reject) => {\r\n    canvas.toBlob(blob => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject(new Error('File Parse Error'));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst AvtarUploadBtn = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { profile } = useProfile();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [img, setImg] = useState(null);\r\n  const avatarEditorRef = useRef();\r\n\r\n  const onFileInputChange = ev => {\r\n    const currFiles = ev.target.files;\r\n\r\n    if (currFiles.length === 1) {\r\n      const file = currFiles[0];\r\n\r\n      if (isValidFile(file)) {\r\n        setImg(file);\r\n        open();\r\n      } else {\r\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onUploadClick = async () => {\r\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n    setIsLoading(true);\r\n    try {\r\n      const blob = await getBlob(canvas);\r\n\r\n      const avatarFileRef = storage\r\n        .ref(`/profiles/${profile.uid}`)\r\n        .child('avatar');\r\n\r\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\r\n        cacheControl: `public , max-age = ${3600 * 24 * 3}`,\r\n      });\r\n\r\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'avatar',\r\n        downloadUrl,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      setIsLoading(false);\r\n      close();\r\n      Alert.info('Avatar has been uploaded', 4000);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3 text-center\">\r\n      <ProfileAvatar\r\n        src={profile.avatar}\r\n        name={profile.name}\r\n        className=\"width-200 height-200 img-fullsize font-huge\"\r\n      />\r\n      <label htmlFor=\"avatar-upload\" className=\"d-block cursor-pointer padded\">\r\n        Select New Avatar\r\n        <input\r\n          type=\"file\"\r\n          id=\"avatar-upload\"\r\n          className=\"d-none\"\r\n          accept={fileInputTypes}\r\n          onChange={onFileInputChange}\r\n        />\r\n      </label>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Adjust and Upload new avatar</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n            {img && (\r\n              <AvatarEditor\r\n                ref={avatarEditorRef}\r\n                image={img}\r\n                width={200}\r\n                height={200}\r\n                border={10}\r\n                borderRadius={100}\r\n                rotate={0}\r\n              />\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"ghost\"\r\n            onClick={onUploadClick}\r\n            disabled={isLoading}\r\n          >\r\n            Upload New Avatar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvtarUploadBtn;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\n\r\nconst EditableInput = ({\r\n  initialValue,\r\n  onSave,\r\n  label = null,\r\n  placeholder = 'Write your Value',\r\n  emptyMsg = 'Input is empty',\r\n  wrapperClassName = '',\r\n  ...inputProps\r\n}) => {\r\n  const [input, setInput] = useState(initialValue);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const OnInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onEditClick = useCallback(() => {\r\n    setIsEditable(p => !p);\r\n  }, []);\r\n\r\n  const onSaveClick = async () => {\r\n    const trimmed = input.trim();\r\n\r\n    if (trimmed === '') {\r\n      Alert.info(emptyMsg, 4000);\r\n    }\r\n\r\n    if (trimmed !== initialValue) {\r\n      await onSave(trimmed);\r\n    }\r\n\r\n    setIsEditable(false);\r\n  };\r\n\r\n  return (\r\n    <div className={wrapperClassName}>\r\n      {label}\r\n      <InputGroup>\r\n        <Input\r\n          {...inputProps}\r\n          disabled={!isEditable}\r\n          placeholder={placeholder}\r\n          value={input}\r\n          onChange={OnInputChange}\r\n        />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable && (\r\n          <InputGroup.Button onClick={onSaveClick}>\r\n            <Icon icon=\"check\" />\r\n          </InputGroup.Button>\r\n        )}\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n","import React, { useState } from 'react';\r\nimport { Alert, Button, Icon, Tag } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst ProviderBlock = () => {\r\n  const [isConnected, setIsConnected] = useState({\r\n    'google.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'facebook.com'\r\n    ),\r\n  });\r\n\r\n  const updateIsConnected = (providerId, value) => {\r\n    setIsConnected(p => {\r\n      return {\r\n        ...p,\r\n        [providerId]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const unlink = async providerId => {\r\n    try {\r\n      if (auth.currentUser.providerData.length === 1) {\r\n        throw new Error(`You cannot disconnect from ${providerId}`);\r\n      }\r\n      await auth.currentUser.unlink(providerId);\r\n\r\n      updateIsConnected(providerId, false);\r\n      Alert.info(`Disconnected from ${providerId}`, 3000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const unLinkFacebook = () => {\r\n    unlink('facebook.com');\r\n  };\r\n  const unLinkGoogle = () => {\r\n    unlink('google.com');\r\n  };\r\n\r\n  const link = async provider => {\r\n    try {\r\n      await auth.currentUser.linkWithPopup(provider);\r\n      Alert.info(`Linked to ${provider.providerId}`, 4000);\r\n\r\n      updateIsConnected(provider.providerId, true);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const linkFacebook = () => {\r\n    link(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n  const linkGoogle = () => {\r\n    link(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isConnected['google.com'] ? (\r\n        <Tag color=\"green\" closable onClose={unLinkGoogle}>\r\n          <Icon icon=\"google\" /> Connected\r\n        </Tag>\r\n      ) : (\r\n        <div className=\"mt-2\">\r\n          <Button block color=\"green\" onClick={linkGoogle}>\r\n            <Icon icon=\"google\" /> Link to Google\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {isConnected['facebook.com'] ? (\r\n        <Tag color=\"blue\" closable onClose={unLinkFacebook}>\r\n          <Icon icon=\"facebook\" /> Connected\r\n        </Tag>\r\n      ) : (\r\n        <div className=\"mt-2\">\r\n          <Button block color=\"blue\" onClick={linkFacebook}>\r\n            <Icon icon=\"facebook\" /> Link to facebook\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderBlock;\r\n","import React from 'react';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport { database } from '../../misc/firebase';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\nimport AvtarUploadBtn from './AvtarUploadBtn';\r\nimport EditableInput from './EditableInput';\r\nimport ProviderBlock from './ProviderBlock';\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const { profile } = useProfile();\r\n\r\n  const onSave = async newData => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'name',\r\n        newData,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      Alert.success('Nickname has been updated', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer.Header>\r\n        <Drawer.Title>Dashboard</Drawer.Title>\r\n      </Drawer.Header>\r\n\r\n      <Drawer.Body>\r\n        <h3>Hey, {profile.name}</h3>\r\n        <ProviderBlock />\r\n        <hr />\r\n        <EditableInput\r\n          name=\"Nickname\"\r\n          initialValue={profile.name}\r\n          onSave={onSave}\r\n          label={<h6 className=\"mb-2\">Nickname</h6>}\r\n        />\r\n        <AvtarUploadBtn />\r\n      </Drawer.Body>\r\n\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={onSignOut}>\r\n          Sign Out\r\n        </Button>\r\n      </Drawer.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useCallback } from 'react';\r\nimport { Alert, Button, Drawer, Icon } from 'rsuite';\r\nimport Dashboard from '.';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\nimport { useMediaQuery, useModalState } from '../../misc/custom-hooks';\r\nimport { auth, database } from '../../misc/firebase';\r\n\r\nconst DashboardToggle = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const ismobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`status/${auth.currentUser.uid}`)\r\n      .set(isOfflineForDatabase)\r\n      .then(() => {\r\n        auth.signOut();\r\n        Alert.info('Signed out', 4000);\r\n        close();\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  }, [close]);\r\n  return (\r\n    <>\r\n      <Button block color=\"blue\" onClick={open}>\r\n        <Icon icon=\"dashboard\" /> DashBoard\r\n      </Button>\r\n      <Drawer full={ismobile} show={isOpen} onHide={close} placement=\"left\">\r\n        <Dashboard onSignOut={onSignOut} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardToggle;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { database } from '../misc/firebase';\r\nimport { transformtoArrwithId } from '../misc/helpers';\r\n\r\nconst RoomsContext = createContext();\r\n\r\nexport const RoomsProvider = ({ children }) => {\r\n  const [rooms, setRooms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const roomListRef = database.ref('rooms');\r\n\r\n    roomListRef.on('value', snap => {\r\n      const data = transformtoArrwithId(snap.val());\r\n      setRooms(data);\r\n    });\r\n\r\n    return () => {\r\n      roomListRef.off();\r\n    };\r\n  }, []);\r\n  \r\n  return (\r\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRooms = () => useContext(RoomsContext);\r\n\r\n","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nconst RoomItem = ({ room }) => {\r\n  const { createdAt, name , lastMessage } = room;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center \">\r\n        <h3 className=\"text-disappear\">{name}</h3>\r\n        <TimeAgo\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n          className=\"font-normal text-black-45\"\r\n        />\r\n      </div>\r\n      <div className=\"d-flex align-items-center text-black-70\">\r\n        {lastMessage ? (\r\n          <>\r\n            <div className=\"d-flex align-item-center\">\r\n              <ProfileAvatar\r\n                src={lastMessage.author.avatar}\r\n                name={lastMessage.author.name}\r\n                size=\"sm\"\r\n              />\r\n            </div>\r\n            <div className=\"text-disappear ml-2\">\r\n              <div className=\"italic\">\r\n                {lastMessage.author.name} :{' '}\r\n              </div>\r\n                <span className=\"text-black\">{lastMessage.text || lastMessage.file.name}</span>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <span>No messages yet...</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItem;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Loader, Nav } from 'rsuite';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport RoomItem from './RoomItem';\r\n\r\nconst ChatRoomList = ({ aboveElHeight }) => {\r\n  const rooms = useRooms();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Nav\r\n      appearance=\"subtle\"\r\n      vertical\r\n      reversed\r\n      className=\"overflow-y-scroll custom-scroll\"\r\n      style={{\r\n        height: `calc(100% - ${aboveElHeight}px)`,\r\n      }}\r\n      activeKey={location.pathname}\r\n    >\r\n      {!rooms && (\r\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\r\n      )}\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms.map(room => (\r\n          <Nav.Item\r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n            key={room.id}\r\n            eventKey={`/chat/${room.id}`}\r\n          >\r\n            <RoomItem room={room} />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatRoomList;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Divider } from 'rsuite'\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal'\r\nimport DashboardToggle from './dashboard/DashboardToggle'\r\nimport ChatRoomList from './rooms/ChatRoomList'\r\n\r\nconst Sidebar = () => {\r\n   \r\n    const topSidebarRef = useRef();\r\n    const [ height, setHeight ] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (topSidebarRef.current) {\r\n            setHeight(topSidebarRef.current.scrollHeight)\r\n        }\r\n        \r\n    }, [topSidebarRef])\r\n\r\n    return (\r\n        <div className=\"h-100 pt-2\">\r\n            <div ref={topSidebarRef}>\r\n                <DashboardToggle />\r\n                <CreateRoomBtnModal/>\r\n                <Divider>Join Conversation</Divider>\r\n            </div>\r\n            <ChatRoomList aboveElHeight = {height}/> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Icon, InputGroup, Modal, Uploader } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nconst AttachmentBtnModal = ({ afterUpload }) => {\r\n\r\n  const { isOpen, open, close } = useModalState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { chatId } = useParams();\r\n\r\n  const [filesList, setFilesList] = useState([]);\r\n  const onChange = filesArr => {\r\n    const filtered = filesArr\r\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n    setFilesList(filtered);\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    \r\n    setIsLoading(true)\r\n    try {\r\n      const uploadPromises = filesList.map(f => {\r\n        return storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(Date.now() + f.name)\r\n          .put(f.blobFile, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n      });\r\n\r\n      const uploadSnapshots = await Promise.all(uploadPromises);\r\n      const shapePromises = uploadSnapshots.map(async snap => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n\r\n      const files = await Promise.all(shapePromises);\r\n\r\n      afterUpload(files);\r\n      setIsLoading(false);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={open}>\r\n        <Icon icon=\"attachment\" />\r\n      </InputGroup.Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Upload Files</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"w-100\">\r\n          <Uploader\r\n            draggable\r\n            autoUpload={false}\r\n            action=\"\"\r\n            fileList={filesList}\r\n            onChange={onChange}\r\n            multiple\r\n            listType=\"picture-text\"\r\n            disabled={isLoading}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block disabled={isLoading} onClick={onUpload}>\r\n            Send to Chat\r\n          </Button>\r\n          <div className=\"text-right mt-2\">\r\n            <small>* only files less than 5mb are allowed </small>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AttachmentBtnModal;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, InputGroup } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst AudioMsgBtn = ({ afterUpload }) => {\r\n  const { chatId } = useParams();\r\n    const [ isRecording, setIsRecording ] = useState(false);\r\n    const [isUploading, setIsUploading] = useState(false)\r\n\r\n  const onClick = useCallback(() => {\r\n    setIsRecording(p => !p);\r\n  }, []);\r\n\r\n    const onUpload = useCallback(async data => {\r\n      \r\n        setIsUploading(true)\r\n    try {\r\n      const snap = await storage\r\n        .ref(`/chat/${chatId}`)\r\n        .child(`audio_${Date.now().mp3}`)\r\n        .put(data.blob, {\r\n          cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n        });\r\n\r\n        const file = {\r\n            contentType: snap.metadata.contentType,\r\n            name: snap.metadata.name,\r\n            url: await snap.ref.getDownloadURL(),\r\n        }\r\n\r\n        setIsUploading(false)\r\n        afterUpload([file])\r\n\r\n    } catch (err) {\r\n        setIsUploading(false)\r\n        Alert.error(err.message, 3000);\r\n    }\r\n  }, [chatId, afterUpload]);\r\n\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={onClick} disabled={isUploading} className={isRecording ? 'animate-blink' : ''}>\r\n        <Icon icon=\"microphone\" />\r\n        <ReactMic\r\n          record={isRecording}\r\n          className=\"d-none\"\r\n          onStop={onUpload}\r\n          mimeType=\"audio/mp3\"\r\n        />\r\n      </InputGroup.Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AudioMsgBtn;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\nimport AttachmentBtnModal from './AttachmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\nconst ChatBottom = () => {\r\n  const [input, setInput] = useState('');\r\n  const [isloading, setisLoading] = useState(false);\r\n\r\n  const { chatId } = useParams();\r\n  const { profile } = useProfile();\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  const onSendClick = async () => {\r\n\r\n    if (input.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    const msgData = assembleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref('messages').push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n\r\n    setisLoading(true);\r\n    try {\r\n      await database.ref().update(updates);\r\n\r\n      setInput('');\r\n      setisLoading(false);\r\n    } catch (err) {\r\n      setisLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = ev => {\r\n    if (ev.keyCode === 13) {\r\n      ev.preventDefault();\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  const afterUpload = useCallback(\r\n    async files => {\r\n      setisLoading(true);\r\n\r\n      const updates = {};\r\n\r\n      files.forEach(file => {\r\n        const msgData = assembleMessage(profile, chatId);\r\n        msgData.file = file;\r\n\r\n        const messageId = database.ref('messages').push().key;\r\n        updates[`/messages/${messageId}`] = msgData;\r\n      });\r\n\r\n      const lastMsgId = Object.keys(updates).pop();\r\n\r\n      updates[`/rooms/${chatId}/lastMessage`] = {\r\n        ...updates[lastMsgId],\r\n        msgId: lastMsgId,\r\n      };\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n        setisLoading(false);\r\n      } catch (err) {\r\n        setisLoading(false);\r\n        Alert.error(err.message, 4000);\r\n      }\r\n    },\r\n    [chatId, profile]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n        <AttachmentBtnModal afterUpload={afterUpload} />\r\n        <AudioMsgBtn afterUpload={afterUpload} />\r\n        <Input\r\n          placeholder=\"Write a new Message here\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n        <InputGroup.Button\r\n          color=\"blue\"\r\n          appearance=\"primary\"\r\n          onClick={onSendClick}\r\n          disabled={isloading}\r\n        >\r\n          <Icon icon=\"send\" />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBottom;\r\n","import React from 'react';\r\nimport { createContext, useContextSelector } from 'use-context-selector';\r\n\r\nconst CurrentRoomContext = createContext();\r\n\r\nexport const CurrentRoomProvider = ({ children, data }) => {\r\n  return (\r\n    <CurrentRoomContext.Provider value={data}>\r\n      {children}\r\n    </CurrentRoomContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCurrentRoom = (selector) => useContextSelector(CurrentRoomContext, selector);","/* eslint-disable consistent-return */\r\nimport React from 'react';\r\nimport { Badge, Tooltip, Whisper } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n  if (!presence) {\r\n    return 'gray';\r\n  }\r\n\r\n  switch (presence.state) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'gray';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\n\r\nconst getText = presence => {\r\n  if (!presence) {\r\n    return 'unknown State';\r\n  }\r\n\r\n  return presence.state === 'online'\r\n    ? 'Online'\r\n    : `Last Online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\nconst PresenceDot = ({ uid }) => {\r\n  const presence = usePresence(uid);\r\n\r\n  return (\r\n    <div>\r\n      <Whisper\r\n        placement=\"top\"\r\n        trigger=\"hover\"\r\n        speaker={\r\n          <Tooltip>\r\n            <i>{getText(presence)}</i>\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <Badge\r\n          className=\"cursor-pointer\"\r\n          style={{\r\n            backgroundColor: getColor(presence),\r\n          }}\r\n        />\r\n      </Whisper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","import React from 'react';\r\nimport { Badge, Icon, IconButton, Tooltip, Whisper } from 'rsuite';\r\n\r\nconst ConditionalBadge = ({ condition, children }) => {\r\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n};\r\n\r\nconst IconBtnControl = ({\r\n  isVisible,\r\n  iconName,\r\n  tooltip,\r\n  onClick,\r\n  badgeContent,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"ml-2\"\r\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\r\n    >\r\n      <ConditionalBadge condition={badgeContent}>\r\n        <Whisper\r\n          \r\n          placement=\"top\"\r\n          delay={0}\r\n          delayShow={0}\r\n          delayHide={0}\r\n          trigger=\"hover\"\r\n          speaker={<Tooltip>{tooltip}</Tooltip>}\r\n        >\r\n          <IconButton\r\n            {...props}\r\n            onClick={onClick}\r\n            circle\r\n            size=\"xs\"\r\n            icon={<Icon icon={iconName} />}\r\n          />\r\n        </Whisper>\r\n      </ConditionalBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconBtnControl;\r\n","import React from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst ImgBtnModal = ({ src, fileName }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"image\"\r\n        alt=\"file\"\r\n        src={src}\r\n        onClick={open}\r\n        className=\"mw-100 mh-100 w-auto\"\r\n      />\r\n\r\n      <Modal show={isOpen} onHide={close} >\r\n        <Modal.Header>\r\n          <Modal.Title>{fileName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <img src={src} alt={fileName} height=\"100%\" width=\"100%\" />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View Orignal\r\n          </a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImgBtnModal;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\n\r\nconst ProfileInfoBtnModal = ({ profile, children ,...btnProps }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { name, avatar, createdAt } = profile;\r\n  const memeberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n  return (\r\n    <div>\r\n      <Button {...btnProps} onClick={open} >{name}</Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{name} Profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <ProfileAvatar\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n          \r\n          <h4 className=\"mt-2\">{name}</h4>\r\n          <p>Memeber since {memeberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {children}\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoBtnModal;\r\n","import React, { memo } from 'react';\r\nimport { Button } from 'rsuite';\r\nimport TimeAgo from 'timeago-react';\r\nimport { useCurrentRoom } from '../../../context/current-room-context';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport { auth } from '../../../misc/firebase';\r\nimport PresenceDot from '../../PresenceDot';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport ImgBtnModal from './ImgBtnModal';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\n\r\nconst renderFileMsg = file => {\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className=\"height-220\">\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (file.contentType.includes('audio')) {\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/media-has-caption\r\n      <audio controls>\r\n        <source src={file.url} type='audio/mp3' />\r\n        Your browser does not support the audio element\r\n      </audio>\r\n    );\r\n  }\r\n\r\n  return <a href={file.url}>Download {file.name}</a>;\r\n};\r\n\r\nconst MessageItem = ({ message, handleAdmin, handleLike, handleDelete }) => {\r\n  const { author, createdAt, text, file, likes, likeCount } = message;\r\n\r\n  const [selfRef, isHovered] = useHover();\r\n  const isMobile = useMediaQuery('(max-width: 992px )');\r\n\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const admins = useCurrentRoom(v => v.admins);\r\n  const isMsgAuthorAdmin = admins.includes(author.uid);\r\n  const isAuthor = auth.currentUser.uid === author.uid;\r\n  const canGrantAdmin = isAdmin && !isAuthor;\r\n\r\n  const canShowIcons = isMobile || isHovered;\r\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n  return (\r\n    <li\r\n      className={`padded mb-1 cursor-pointer ${\r\n        isHovered ? 'bg-black-02' : ''\r\n      } `}\r\n      ref={selfRef}\r\n    >\r\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\r\n        <PresenceDot uid={author.uid} />\r\n        <ProfileAvatar\r\n          src={author.avatar}\r\n          name={author.name}\r\n          className=\"ml-1\"\r\n          size=\"xs\"\r\n        />\r\n\r\n        <ProfileInfoBtnModal\r\n          profile={author}\r\n          appearance=\"link\"\r\n          className=\"ml-1 p-0 text-black\"\r\n        >\r\n          {canGrantAdmin && (\r\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\r\n              {isMsgAuthorAdmin\r\n                ? 'Remove Admin Permission'\r\n                : 'Give Admin Permission'}\r\n            </Button>\r\n          )}\r\n        </ProfileInfoBtnModal>\r\n        <TimeAgo\r\n          datetime={createdAt}\r\n          className=\"font-normal text-black-45 ml-2\"\r\n        />\r\n        <IconBtnControl\r\n          {...(isLiked ? { color: 'red' } : {})}\r\n          isVisible={canShowIcons}\r\n          iconName=\"heart\"\r\n          tooltip=\"Like this message\"\r\n          onClick={() => {\r\n            handleLike(message.id);\r\n          }}\r\n          badgeContent={likeCount}\r\n        />\r\n        {isAuthor && (\r\n          <IconBtnControl\r\n            isVisible={canShowIcons}\r\n            iconName=\"close\"\r\n            tooltip=\"Delete this message\"\r\n            onClick={() => {\r\n              handleDelete(message.id, file);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      <div>\r\n        {text && <span className=\"word-break-all\">{text}</span>}\r\n        {file && renderFileMsg(file)}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(MessageItem);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button } from 'rsuite';\r\nimport { auth, database, storage } from '../../../misc/firebase';\r\nimport { groupBy, transformtoArrwithId } from '../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst PAGE_SIZE = 15;\r\nconst messagesRef = database.ref('/messages');\r\n\r\nfunction shouldScrollToBottom(node, threshold = 30) {\r\n\r\n  const percentage = (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\r\n\r\n  return percentage > threshold\r\n}\r\n\r\nconst Messages = () => {\r\n  const { chatId } = useParams();\r\n  const [messages, setMessages] = useState(null);\r\n  const [ limit, setLimit ] = useState(PAGE_SIZE);\r\n  const selfRef = useRef();\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  const loadMessages = useCallback(\r\n    limitToLast => {\r\n      const node = selfRef.current;\r\n      messagesRef.off();\r\n\r\n      messagesRef\r\n        .orderByChild('roomId')\r\n        .equalTo(chatId)\r\n        .limitToLast(limitToLast || PAGE_SIZE)\r\n        .on('value', snap => {\r\n          const data = transformtoArrwithId(snap.val());\r\n        \r\n          setMessages(data);\r\n          if (shouldScrollToBottom(node)) {\r\n            node.scrollTop = node.scrollHeight;\r\n          }\r\n         });\r\n      setLimit(p => p + PAGE_SIZE);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const onloadMore = useCallback(() => {\r\n\r\n    const node = selfRef.current;\r\n\r\n    const oldHeight = node.scrollHeight;\r\n\r\n    loadMessages(limit);\r\n\r\n    setTimeout(() => {\r\n      const newHeight = node.scrollHeight;\r\n      node.scrollTop = newHeight - oldHeight\r\n    }, 200);\r\n\r\n  }, [loadMessages, limit]);\r\n\r\n  useEffect(() => {\r\n    const node = selfRef.current;\r\n      \r\n    loadMessages();\r\n\r\n    setTimeout(() => {\r\n      \r\n      node.scrollTop = node.scrollHeight;\r\n    }, 200);\r\n\r\n    return () => {\r\n      messagesRef.off('value');\r\n    };\r\n  }, [loadMessages]);\r\n\r\n  const handleAdmin = useCallback(\r\n    async uid => {\r\n      const adminRef = database.ref(`rooms/${chatId}/admins`);\r\n      let alertMsg;\r\n      await adminRef.transaction(admins => {\r\n        if (admins) {\r\n          if (admins[uid]) {\r\n            admins = null;\r\n            alertMsg = 'Admin Permission removed';\r\n          } else {\r\n            admins[uid] = true;\r\n            alertMsg = 'Admin Permission granted';\r\n          }\r\n        }\r\n        return admins;\r\n      });\r\n\r\n      Alert.info(alertMsg, 4000);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const handleLike = useCallback(async msgId => {\r\n    const { uid } = auth.currentUser;\r\n    const messageRef = database.ref(`messages/${msgId}`);\r\n\r\n    await messageRef.transaction(msg => {\r\n      if (msg) {\r\n        if (msg.likes && msg.likes[uid]) {\r\n          msg.likeCount -= 1;\r\n          msg.likes[uid] = null;\r\n        } else {\r\n          msg.likeCount += 1;\r\n\r\n          if (!msg.likes) {\r\n            msg.likes = {};\r\n          }\r\n\r\n          msg.likes[uid] = true;\r\n        }\r\n      }\r\n      return msg;\r\n    });\r\n  }, []);\r\n\r\n  const handleDelete = useCallback(\r\n    async (msgId, file) => {\r\n      // eslint-disable-next-line no-alert\r\n      if (!window.confirm('Delete this message?')) {\r\n        return;\r\n      }\r\n      const isLast = messages[messages.length - 1].id === msgId;\r\n      const updates = {};\r\n\r\n      updates[`messages/${msgId}`] = null;\r\n\r\n      if (isLast && messages.length > 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = {\r\n          ...messages[messages.length - 2],\r\n          msgId: messages[messages.length - 2].id,\r\n        };\r\n      }\r\n\r\n      if (isLast && messages.length === 0) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = null;\r\n      }\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n        Alert.info('Message has been deleted', 4000);\r\n      } catch (err) {\r\n        // eslint-disable-next-line consistent-return\r\n        return Alert.error(err.message, 4000);\r\n      }\r\n\r\n      if (file) {\r\n        try {\r\n          const fileRef = storage.refFromURL(file.url);\r\n          await fileRef.delete();\r\n        } catch (err) {\r\n          Alert.error(err.message, 4000);\r\n        }\r\n      }\r\n    },\r\n    [chatId, messages]\r\n  );\r\n\r\n  const renderMessages = () => {\r\n    const groups = groupBy(messages, item =>\r\n      new Date(item.createdAt).toDateString()\r\n    );\r\n\r\n    const items = [];\r\n\r\n    Object.keys(groups).forEach(date => {\r\n      items.push(\r\n        <li key={date} className=\"text-center mb-1 padded\">\r\n          {date}\r\n        </li>\r\n      );\r\n\r\n      const msgs = groups[date].map(msg => (\r\n        <MessageItem\r\n          key={msg.id}\r\n          message={msg}\r\n          handleAdmin={handleAdmin}\r\n          handleLike={handleLike}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ));\r\n      items.push(...msgs);\r\n    });\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <ul  ref={selfRef} className=\"msg-list custom-scroll\">\r\n      {messages && messages.length >= PAGE_SIZE && (\r\n        <li className='text-center mt-2 mb-2'>\r\n          <Button onClick={onloadMore} color='green'>Load more</Button>\r\n        </li>\r\n      )}\r\n      {isChatEmpty && <li>No messages yet</li>}\r\n      {canShowMessages && renderMessages()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { memo } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room-context';\r\nimport { useMediaQuery, useModalState } from '../../../misc/custom-hooks';\r\nimport { database } from '../../../misc/firebase';\r\nimport EditableInput from '../../dashboard/EditableInput';\r\n\r\nconst EditRoomBtnDrawer = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { chatId } = useParams();\r\n  const isMobile = useMediaQuery('(max-width : 992px)')\r\n\r\n  const name = useCurrentRoom(v => v.name);\r\n  const description = useCurrentRoom(v => v.description);\r\n\r\n  const updateData = (key, value) => {\r\n    database.ref(`rooms/${chatId}`).child(key).set(value).then(() => {\r\n      Alert.success('Successfully Updated', 4000);\r\n      \r\n    }).catch(err => {\r\n      Alert.error(err.message, 4000)\r\n    })\r\n  };\r\n\r\n  const onNameSave = newName => {\r\n    updateData('name', newName);\r\n  };\r\n\r\n  const onDescriptionSave = newDesc => {\r\n    updateData('description', newDesc);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\r\n        A\r\n      </Button>\r\n\r\n      <Drawer full={isMobile} show={isOpen} onHide={close}>\r\n        <Drawer.Header>\r\n          <Drawer.Title>Edit Room</Drawer.Title>\r\n        </Drawer.Header>\r\n        <Drawer.Body>\r\n          <EditableInput\r\n            initialValue={name}\r\n            onSave={onNameSave}\r\n            label={<h6 className=\"mb-2\">Name</h6>}\r\n            emptyMsg=\"Name cannot be empty \"\r\n          />\r\n          <EditableInput\r\n            componentClass=\"textarea\"\r\n            rows={5}\r\n            initialValue={description}\r\n            onSave={onDescriptionSave}\r\n            label={<h6 className=\"mb-2\">Description</h6>}\r\n            emptyMsg=\"Description cannot be empty \"\r\n            wrapperClassName=\"mt-3\"\r\n          />\r\n        </Drawer.Body>\r\n        <Drawer.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Drawer.Footer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n","import React, { memo } from 'react'\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room-context'\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst RoomInfobBtnModal = () => {\r\n    const { isOpen , open , close} = useModalState();\r\n    const description = useCurrentRoom(v => v.description);\r\n    const name = useCurrentRoom(v => v.name);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button appearance='link' className='px-0'onClick={open}>\r\n                Room Information\r\n            </Button>\r\n            <Modal show={isOpen} onHide={close} >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        About {name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h6 className='mb-1'>Description </h6>\r\n                    <p>{description}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button block onClick={close}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(RoomInfobBtnModal)\r\n","import React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonToolbar, Icon } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room-context';\r\nimport { useMediaQuery } from '../../../misc/custom-hooks';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\nimport RoomInfobBtnModal from './RoomInfobBtnModal';\r\n\r\nconst ChatTop = () => {\r\n  const name = useCurrentRoom(v => v.name);\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin)\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"text-disappear d-flex align-items-center\">\r\n          <Icon\r\n            componentClass={Link}\r\n            to=\"/chat-app/\"\r\n            icon=\"arrow-circle-left\"\r\n            size=\"2x\"\r\n            className={\r\n              isMobile\r\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                : 'd-none'\r\n            }\r\n          />\r\n          <span className=\"text-disappear\">{name}</span>\r\n        </h4>\r\n        <ButtonToolbar className=\"ws-nowrap\">\r\n          { isAdmin &&\r\n            <EditRoomBtnDrawer />}\r\n        </ButtonToolbar>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <span>todo</span>\r\n        <RoomInfobBtnModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ChatTop);\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport Messages from '../../components/chat-window/messages';\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport { CurrentRoomProvider } from '../../context/current-room-context';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport { auth } from '../../misc/firebase';\r\nimport { transformtoArr } from '../../misc/helpers';\r\n\r\nconst Chat = () => {\r\n  const { chatId } = useParams();\r\n\r\n  const rooms = useRooms();\r\n\r\n  if (!rooms) {\r\n    return <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />;\r\n  }\r\n\r\n  const currentRoom = rooms.find(room => room.id === chatId);\r\n\r\n  if (!currentRoom) {\r\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n\r\n  const admins = transformtoArr(currentRoom.admins);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"chat-bottom\">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Route, Switch, useLocation, useRouteMatch } from 'react-router';\r\nimport { Col, Grid, Row } from 'rsuite';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\nimport Chat from './Chat';\r\n\r\nconst Home = () => {\r\n  const isDesktop = useMediaQuery('(min-width : 992px)');\r\n\r\n  const { isExact } = useRouteMatch();\r\n\r\n  const { pathname } = useLocation()\r\n  let ishome = null;\r\n  \r\n  if (pathname === '/chat-app/') {\r\n    ishome = true;\r\n  } else {\r\n    ishome =  false;\r\n  }\r\n\r\n  const canRenderSidebar = isDesktop || isExact || ishome ;\r\n\r\n  return (\r\n    <RoomsProvider>\r\n      <Grid fluid className=\"h-100\">\r\n        <Row className=\"h-100\">\r\n          {canRenderSidebar && (\r\n            <Col xs={24} md={8} className=\"h-100\">\r\n              <Sidebar />\r\n            </Col>\r\n          )}\r\n          <Switch>\r\n            <Route exact path=\"/chat/:chatId\">\r\n              <Col xs={24} md={16} className=\"h-100\">\r\n                <Chat />\r\n              </Col>\r\n            </Route>\r\n            <Route>\r\n              {isDesktop && (\r\n                <Col xs={24} md={16} className=\"h-100\">\r\n                  <h6 className=\"text-center mt-page\">Please Select Chat</h6>\r\n                </Col>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </Row>\r\n      </Grid>\r\n    </RoomsProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const {profile, isLoading} = useProfile();\r\n\r\n    if (isLoading && !profile) {\r\n        return <Container>\r\n            <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\"/>\r\n        </Container>\r\n    }\r\n    \r\n  if (!profile && !isLoading) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children, ...routeProps }) => {\r\n    const {profile , isLoading} = useProfile();\r\n\r\n    if (isLoading && !profile) {\r\n      return (\r\n        <Container>\r\n          <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n        </Container>\r\n      );\r\n    }\r\n\r\n  if (profile && !isLoading) {\r\n    return <Redirect to=\"/chat-app/\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\nimport { Switch } from 'react-router';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport SignIn from './pages/SignIn';\nimport './styles/main.scss';\nimport Home from './pages/Home';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport {ProfileProvider} from './context/profile.context'\n\nfunction App() {\n  return (\n    <ProfileProvider>\n    <Switch>\n      <PublicRoute path=\"/signin\">\n        <SignIn />\n      </PublicRoute>\n      <PrivateRoute path=\"/\">\n        <Home />\n      </PrivateRoute>\n    </Switch>\n    </ProfileProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}