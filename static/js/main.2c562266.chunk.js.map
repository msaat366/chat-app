{"version":3,"sources":["misc/firebase.js","pages/SignIn.js","misc/custom-hooks.js","components/CreateRoomBtnModal.js","context/profile.context.js","misc/helpers.js","components/ProfileAvatar.js","components/dashboard/AvtarUploadBtn.js","components/dashboard/EditableInput.js","components/dashboard/ProviderBlock.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","context/rooms.context.js","components/rooms/RoomItem.js","components/rooms/ChatRoomList.js","components/Sidebar.js","components/chat-window/bottom/index.js","context/current-room-context.js","components/PresenceDot.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/RoomInfobBtnModal.js","components/chat-window/top/index.js","pages/Home/Chat.js","pages/Home/index.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","database","storage","SignIn","signInWithProvider","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","ref","uid","set","name","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","info","message","Container","Grid","className","Row","Col","xs","md","mdOffset","lg","Panel","Button","block","color","onClick","FacebookAuthProvider","Icon","icon","GoogleAuthProvider","useModalState","defaultValue","useState","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","useEffect","queryList","listener","evt","addListener","removeListener","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","isLoading","setIsLoading","formRef","useRef","onFormChange","value","onSubmit","current","check","newRoomData","admins","currentUser","push","error","Modal","show","onHide","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","rows","componentClass","Footer","appearance","disabled","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","profile","setProfile","userRef","userStatusRef","authUnsub","onAuthStateChanged","authObj","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","off","Provider","useProfile","useContext","getNameInitials","splitName","toUpperCase","split","length","transformtoArrwithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsg","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","Error","AvtarUploadBtn","img","setImg","avatarEditorRef","onUploadClick","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","image","width","height","border","borderRadius","rotate","EditableInput","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","OnInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","ProviderBlock","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","link","linkWithPopup","Tag","closable","onClose","Dashboard","onSignOut","newData","Drawer","DashboardToggle","ismobile","signOut","catch","err","full","placement","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","RoomItem","room","lastMessage","datetime","Date","author","size","text","ChatRoomList","aboveElHeight","location","useLocation","Nav","vertical","reversed","style","activeKey","pathname","Loader","center","content","speed","Item","Link","to","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","Divider","assembleMessage","chatId","created","ChatBottom","isloading","setisLoading","useParams","onInputChange","onSendClick","msgData","messageId","msgId","onKeyDown","keyCode","preventDefault","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","getColor","presence","getText","toLocaleDateString","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ProfileInfoBtnModal","btnProps","memeberSince","shortName","MessageItem","handleAdmin","isAdmin","v","isMsgAuthorAdmin","isAuthor","canGrantAdmin","memo","Messages","alertMsg","messages","setMessages","isChatEmpty","canShowMessages","messageRef","adminRef","transaction","msg","EditRoomBtnDrawer","isMobile","updateData","newName","newDesc","RoomInfobBtnModal","ChatTop","ButtonToolbar","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","exact","path","PrivateRoute","routeProps","PublicRoute","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c562266.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database'\r\nimport 'firebase/storage'\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyBJ8BIozm8m6Mh625DJyLDjKHrZi--120g',\r\n  authDomain: 'chat-app-3d4b8.firebaseapp.com',\r\n  projectId: 'chat-app-3d4b8',\r\n  storageBucket: 'chat-app-3d4b8.appspot.com',\r\n  messagingSenderId: '874785747372',\r\n  appId: '1:874785747372:web:c2a6c234965321bbc8ca09',\r\n  measurementId: 'G-W0MC2PE2VR',\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nexport const auth = app.auth();\r\nexport const database = app.database('https://chat-app-3d4b8-default-rtdb.asia-southeast1.firebasedatabase.app');\r\nexport const storage = app.storage();","import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { Container, Grid, Panel, Row, Col, Icon, Button, Alert } from 'rsuite';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst SignIn = () => {\r\n  const signInWithProvider = async provider => {\r\n    try {\r\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n      if (additionalUserInfo.isNewUser) {\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n          name: user.displayName,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        });\r\n      }\r\n\r\n      Alert.success('Signed in ', 4000);\r\n    } catch (err) {\r\n      Alert.info(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onFacebookSignIn = () => {\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n  const onGoogleSignIn = () => {\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid className=\"mt-page\">\r\n        <Row>\r\n          <Col xs={24} md={12} mdOffset={6} lg={12}>\r\n            <Panel>\r\n              <div className=\"text-center\">\r\n                <h2>Welcome to Chat</h2>\r\n                <p>Progressive chat platform for Goodness Gracious</p>\r\n              </div>\r\n              <div className=\"mt-3\">\r\n                <Button block color=\"blue\" onClick={onFacebookSignIn}>\r\n                  <Icon icon=\"facebook\" /> Continue With Facebook\r\n                </Button>\r\n\r\n                <Button block color=\"green\" onClick={onGoogleSignIn}>\r\n                  <Icon icon=\"google\" /> Continue With Google\r\n                </Button>\r\n              </div>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModalState(defaultValue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n  const open = useCallback(() => {\r\n    setIsOpen(true);\r\n  }, []);\r\n  const close = useCallback(() => {\r\n    setIsOpen(false);\r\n  }, []);\r\n  return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addListener(listener);\r\n    return () => queryList.removeListener(listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n\r\n  \r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`/status/${uid}`);\r\n\r\n    userStatusRef.on('value', snap => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n\r\n        setPresence(data);\r\n      }\r\n    });\r\n    \r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [ uid ]);\r\n\r\n  \r\n  return presence;\r\n}\r\n","import React, { useCallback, useRef, useState } from 'react';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  ControlLabel,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  Icon,\r\n  Modal,\r\n  Schema,\r\n} from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useModalState } from '../misc/custom-hooks';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n  name: StringType().isRequired('Chat name is required'),\r\n  description: StringType().isRequired('Description is required'),\r\n});\r\n\r\nconst INITIAL_FORM = {\r\n  name: '',\r\n  description: '',\r\n};\r\n\r\nconst CreateRoomBtnModal = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const formRef = useRef();\r\n\r\n  const onFormChange = useCallback(value => {\r\n    setFormValue(value);\r\n  }, []);\r\n\r\n  const onSubmit = async () => {\r\n    \r\n    if (!formRef.current.check()) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    const newRoomData = {\r\n      ...formValue,\r\n      createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n      admins: {\r\n        [auth.currentUser.uid] : true\r\n      }\r\n    };\r\n    try {\r\n      await database.ref('rooms').push(newRoomData);\r\n\r\n      Alert.info(`${formValue.name} has been created`, 4000);\r\n      setIsLoading(false);\r\n      setFormValue(INITIAL_FORM);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-1\">\r\n      <Button block color=\"green\" onClick={open}>\r\n        <Icon icon=\"creative\" /> Create new Chat room\r\n      </Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>New Chat Room</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form\r\n            fluid\r\n            onChange={onFormChange}\r\n            formValue={formValue}\r\n            model={model}\r\n            ref={formRef}\r\n          >\r\n            <FormGroup>\r\n              <ControlLabel>Room name</ControlLabel>\r\n              <FormControl name=\"name\" placeholder=\"Enter Chat room name...\" />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Description</ControlLabel>\r\n              <FormControl\r\n                rows={5}\r\n                name=\"description\"\r\n                placeholder=\"Enter the description...\"\r\n                componentClass=\"textarea\"\r\n              />\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"primary\"\r\n            onClick={onSubmit}\r\n            disabled={isLoading}\r\n          >\r\n            Create new chat room\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoomBtnModal;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport const ProfileProvider = ({ children }) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n\r\n    const authUnsub = auth.onAuthStateChanged(authObj => {\r\n      if (authObj) {\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n\r\n        userRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val();\r\n\r\n          const data = {\r\n            name,\r\n            createdAt,\r\n            avatar,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n\r\n          setProfile(data);\r\n          setIsLoading(false);\r\n        });\r\n\r\n\r\n        database.ref('.info/connected')\r\n          .on('value', (snapshot) => {\r\n\r\n            if (!!snapshot.val() === false) {\r\n              return;\r\n            }\r\n\r\n            userStatusRef\r\n              .onDisconnect()\r\n              .set(isOfflineForDatabase)\r\n              .then( ()=> {\r\n              \r\n                userStatusRef.set(isOnlineForDatabase);\r\n              });\r\n          });\r\n\r\n      } else {\r\n        if (userRef) {\r\n          userRef.off();\r\n        }\r\n\r\n        if (userStatusRef) {\r\n          userStatusRef.off();\r\n        }\r\n\r\n        database.ref('.info/connected').off();\r\n\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n    return () => {\r\n      authUnsub();\r\n\r\n      if (userStatusRef) {\r\n        userStatusRef.off();\r\n      }\r\n\r\n      if (userRef) {\r\n        userRef.off();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ isLoading, profile }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useProfile = () => useContext(ProfileContext);\r\n","export function getNameInitials(name) {\r\n  const splitName = name.toUpperCase().split(' ');\r\n\r\n  if (splitName.length > 1) {\r\n    return splitName[0][0] + splitName[1][0];\r\n  }\r\n  return splitName[0][0];\r\n}\r\n\r\nexport function transformtoArrwithId(snapVal) {\r\n  return snapVal\r\n    ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId };\r\n      })\r\n    : [];\r\n}\r\n\r\nexport function transformtoArr(snapVal) {\r\n  return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {};\r\n\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsg = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid') \r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const [mSnap, rSnap] = await Promise.all([getMsg, getRooms]);\r\n\r\n  mSnap.forEach(msgSnap => {\r\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  rSnap.forEach(roomSnap => {\r\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  return updates;\r\n}\r\n","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameInitials } from '../misc/helpers';\r\n\r\nconst ProfileAvatar = ({ name, ...avatarProps }) => {\r\n  return <Avatar circle {...avatarProps}>{getNameInitials(name)}</Avatar>;\r\n};\r\n\r\nexport default ProfileAvatar;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Alert, Button, Modal } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { database, storage } from '../../misc/firebase';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst fileInputTypes = '.png, .jpeg, .jpg';\r\n\r\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/pjpeg'];\r\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\r\n\r\n// Check the video again for blob\r\n\r\nconst getBlob = canvas => {\r\n  return new Promise((resolve, reject) => {\r\n    canvas.toBlob(blob => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject(new Error('File Parse Error'));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst AvtarUploadBtn = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { profile } = useProfile();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [img, setImg] = useState(null);\r\n  const avatarEditorRef = useRef();\r\n\r\n  const onFileInputChange = ev => {\r\n    const currFiles = ev.target.files;\r\n\r\n    if (currFiles.length === 1) {\r\n      const file = currFiles[0];\r\n\r\n      if (isValidFile(file)) {\r\n        setImg(file);\r\n        open();\r\n      } else {\r\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onUploadClick = async () => {\r\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n    setIsLoading(true);\r\n    try {\r\n      const blob = await getBlob(canvas);\r\n\r\n      const avatarFileRef = storage\r\n        .ref(`/profiles/${profile.uid}`)\r\n        .child('avatar');\r\n\r\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\r\n        cacheControl: `public , max-age = ${3600 * 24 * 3}`,\r\n      });\r\n\r\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'avatar',\r\n        downloadUrl,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      setIsLoading(false);\r\n      close();\r\n      Alert.info('Avatar has been uploaded', 4000);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 3000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-3 text-center\">\r\n      <ProfileAvatar\r\n        src={profile.avatar}\r\n        name={profile.name}\r\n        className=\"width-200 height-200 img-fullsize font-huge\"\r\n      />\r\n      <label htmlFor=\"avatar-upload\" className=\"d-block cursor-pointer padded\">\r\n        Select New Avatar\r\n        <input\r\n          type=\"file\"\r\n          id=\"avatar-upload\"\r\n          className=\"d-none\"\r\n          accept={fileInputTypes}\r\n          onChange={onFileInputChange}\r\n        />\r\n      </label>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Adjust and Upload new avatar</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n            {img && (\r\n              <AvatarEditor\r\n                ref={avatarEditorRef}\r\n                image={img}\r\n                width={200}\r\n                height={200}\r\n                border={10}\r\n                borderRadius={100}\r\n                rotate={0}\r\n              />\r\n            )}\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            block\r\n            appearance=\"ghost\"\r\n            onClick={onUploadClick}\r\n            disabled={isLoading}\r\n          >\r\n            Upload New Avatar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvtarUploadBtn;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\n\r\nconst EditableInput = ({\r\n  initialValue,\r\n  onSave,\r\n  label = null,\r\n  placeholder = 'Write your Value',\r\n  emptyMsg = 'Input is empty',\r\n  wrapperClassName = '',\r\n  ...inputProps\r\n}) => {\r\n  const [input, setInput] = useState(initialValue);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const OnInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onEditClick = useCallback(() => {\r\n    setIsEditable(p => !p);\r\n  }, []);\r\n\r\n  const onSaveClick = async () => {\r\n    const trimmed = input.trim();\r\n\r\n    if (trimmed === '') {\r\n      Alert.info(emptyMsg, 4000);\r\n    }\r\n\r\n    if (trimmed !== initialValue) {\r\n      await onSave(trimmed);\r\n    }\r\n\r\n    setIsEditable(false);\r\n  };\r\n\r\n  return (\r\n    <div className={wrapperClassName}>\r\n      {label}\r\n      <InputGroup>\r\n        <Input\r\n          {...inputProps}\r\n          disabled={!isEditable}\r\n          placeholder={placeholder}\r\n          value={input}\r\n          onChange={OnInputChange}\r\n        />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable && (\r\n          <InputGroup.Button onClick={onSaveClick}>\r\n            <Icon icon=\"check\" />\r\n          </InputGroup.Button>\r\n        )}\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableInput;\r\n","import React, { useState } from 'react';\r\nimport { Alert, Button, Icon, Tag } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nconst ProviderBlock = () => {\r\n  const [isConnected, setIsConnected] = useState({\r\n    'google.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'facebook.com'\r\n    ),\r\n  });\r\n\r\n  const updateIsConnected = (providerId, value) => {\r\n    setIsConnected(p => {\r\n      return {\r\n        ...p,\r\n        [providerId]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const unlink = async providerId => {\r\n    try {\r\n      if (auth.currentUser.providerData.length === 1) {\r\n        throw new Error(`You cannot disconnect from ${providerId}`);\r\n      }\r\n      await auth.currentUser.unlink(providerId);\r\n\r\n      updateIsConnected(providerId, false);\r\n      Alert.info(`Disconnected from ${providerId}`, 3000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const unLinkFacebook = () => {\r\n    unlink('facebook.com');\r\n  };\r\n  const unLinkGoogle = () => {\r\n    unlink('google.com');\r\n  };\r\n\r\n  const link = async provider => {\r\n    try {\r\n      await auth.currentUser.linkWithPopup(provider);\r\n      Alert.info(`Linked to ${provider.providerId}`, 4000);\r\n\r\n      updateIsConnected(provider.providerId, true);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const linkFacebook = () => {\r\n    link(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n  const linkGoogle = () => {\r\n    link(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isConnected['google.com'] ? (\r\n        <Tag color=\"green\" closable onClose={unLinkGoogle}>\r\n          <Icon icon=\"google\" /> Connected\r\n        </Tag>\r\n      ) : (\r\n        <div className=\"mt-2\">\r\n          <Button block color=\"green\" onClick={linkGoogle}>\r\n            <Icon icon=\"google\" /> Link to Google\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {isConnected['facebook.com'] ? (\r\n        <Tag color=\"blue\" closable onClose={unLinkFacebook}>\r\n          <Icon icon=\"facebook\" /> Connected\r\n        </Tag>\r\n      ) : (\r\n        <div className=\"mt-2\">\r\n          <Button block color=\"blue\" onClick={linkFacebook}>\r\n            <Icon icon=\"facebook\" /> Link to facebook\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProviderBlock;\r\n","import React from 'react';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport { database } from '../../misc/firebase';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\nimport AvtarUploadBtn from './AvtarUploadBtn';\r\nimport EditableInput from './EditableInput';\r\nimport ProviderBlock from './ProviderBlock';\r\n\r\nconst Dashboard = ({ onSignOut }) => {\r\n  const { profile } = useProfile();\r\n\r\n  const onSave = async newData => {\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'name',\r\n        newData,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      Alert.success('Nickname has been updated', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer.Header>\r\n        <Drawer.Title>Dashboard</Drawer.Title>\r\n      </Drawer.Header>\r\n\r\n      <Drawer.Body>\r\n        <h3>Hey, {profile.name}</h3>\r\n        <ProviderBlock />\r\n        <hr />\r\n        <EditableInput\r\n          name=\"Nickname\"\r\n          initialValue={profile.name}\r\n          onSave={onSave}\r\n          label={<h6 className=\"mb-2\">Nickname</h6>}\r\n        />\r\n        <AvtarUploadBtn />\r\n      </Drawer.Body>\r\n\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={onSignOut}>\r\n          Sign Out\r\n        </Button>\r\n      </Drawer.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useCallback } from 'react';\r\nimport { Alert, Button, Drawer, Icon } from 'rsuite';\r\nimport Dashboard from '.';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\nimport { useMediaQuery, useModalState } from '../../misc/custom-hooks';\r\nimport { auth, database } from '../../misc/firebase';\r\n\r\nconst DashboardToggle = () => {\r\n  const { isOpen, close, open } = useModalState();\r\n  const ismobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const onSignOut = useCallback(() => {\r\n    database\r\n      .ref(`/status/${auth.currentUser.uid}`)\r\n      .onDisconnect()\r\n      .set(isOfflineForDatabase).then(()=> {\r\n        \r\n        auth.signOut();\r\n        Alert.info('Signed out', 4000);\r\n        close();\r\n      }).catch(err => {\r\n        Alert.error(err.message, 4000)\r\n      })\r\n\r\n  }, [close]);\r\n  return (\r\n    <>\r\n      <Button block color=\"blue\" onClick={open}>\r\n        <Icon icon=\"dashboard\" /> DashBoard\r\n      </Button>\r\n      <Drawer full={ismobile} show={isOpen} onHide={close} placement=\"left\">\r\n        <Dashboard onSignOut={onSignOut} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DashboardToggle;\r\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { database } from '../misc/firebase';\r\nimport { transformtoArrwithId } from '../misc/helpers';\r\n\r\nconst RoomsContext = createContext();\r\n\r\nexport const RoomsProvider = ({ children }) => {\r\n  const [rooms, setRooms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const roomListRef = database.ref('rooms');\r\n\r\n    roomListRef.on('value', snap => {\r\n      const data = transformtoArrwithId(snap.val());\r\n      setRooms(data);\r\n    });\r\n\r\n    return () => {\r\n      roomListRef.off();\r\n    };\r\n  }, []);\r\n  \r\n  return (\r\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRooms = () => useContext(RoomsContext);\r\n\r\n","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nconst RoomItem = ({ room }) => {\r\n  const { createdAt, name , lastMessage } = room;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center \">\r\n        <h3 className=\"text-disappear\">{name}</h3>\r\n        <TimeAgo\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n          className=\"font-normal text-black-45\"\r\n        />\r\n      </div>\r\n      <div className=\"d-flex align-items-center text-black-70\">\r\n        {lastMessage ? (\r\n          <>\r\n            <div className=\"d-flex align-item-center\">\r\n              <ProfileAvatar\r\n                src={lastMessage.author.avatar}\r\n                name={lastMessage.author.name}\r\n                size=\"sm\"\r\n              />\r\n            </div>\r\n            <div className=\"text-disappear ml-2\">\r\n              <div className=\"italic\">\r\n                {lastMessage.author.name} :{' '}\r\n              </div>\r\n                <span className=\"text-black\">{lastMessage.text}</span>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <span>No messages yet...</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomItem;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Loader, Nav } from 'rsuite';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport RoomItem from './RoomItem';\r\n\r\nconst ChatRoomList = ({ aboveElHeight }) => {\r\n  const rooms = useRooms();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Nav\r\n      appearance=\"subtle\"\r\n      vertical\r\n      reversed\r\n      className=\"overflow-y-scroll custom-scroll\"\r\n      style={{\r\n        height: `calc(100% - ${aboveElHeight}px)`,\r\n      }}\r\n      activeKey={location.pathname}\r\n    >\r\n      {!rooms && (\r\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\r\n      )}\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms.map(room => (\r\n          <Nav.Item\r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n            key={room.id}\r\n            eventKey={`/chat/${room.id}`}\r\n          >\r\n            <RoomItem room={room} />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatRoomList;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Divider } from 'rsuite'\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal'\r\nimport DashboardToggle from './dashboard/DashboardToggle'\r\nimport ChatRoomList from './rooms/ChatRoomList'\r\n\r\nconst Sidebar = () => {\r\n   \r\n    const topSidebarRef = useRef();\r\n    const [ height, setHeight ] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (topSidebarRef.current) {\r\n            setHeight(topSidebarRef.current.scrollHeight)\r\n        }\r\n        \r\n    }, [topSidebarRef])\r\n\r\n    return (\r\n        <div className=\"h-100 pt-2\">\r\n            <div ref={topSidebarRef}>\r\n                <DashboardToggle />\r\n                <CreateRoomBtnModal/>\r\n                <Divider>Join Conversation</Divider>\r\n            </div>\r\n            <ChatRoomList aboveElHeight = {height}/> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      created: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n  };\r\n}\r\n\r\nconst ChatBottom = () => {\r\n  const [input, setInput] = useState('');\r\n  const [isloading, setisLoading] = useState(false);\r\n\r\n  const { chatId } = useParams();\r\n  const { profile } = useProfile();\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim === '') {\r\n      return;\r\n    }\r\n\r\n    const msgData = assembleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref('messages').push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n\r\n    setisLoading(true);\r\n    try {\r\n      await database.ref().update(updates);\r\n\r\n      setInput('');\r\n      setisLoading(false);\r\n    } catch (err) {\r\n      setisLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n    const onKeyDown = ev => {\r\n    if (ev.keyCode === 13) {\r\n      ev.preventDefault();\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n        <Input\r\n          placeholder=\"Write a new Message here\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n        <InputGroup.Button\r\n          color=\"blue\"\r\n          appearance=\"primary\"\r\n          onClick={onSendClick}\r\n          disabled={isloading}\r\n        >\r\n          <Icon icon=\"send\" />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBottom;\r\n","import React from 'react';\r\nimport { createContext, useContextSelector } from 'use-context-selector';\r\n\r\nconst CurrentRoomContext = createContext();\r\n\r\nexport const CurrentRoomProvider = ({ children, data }) => {\r\n  return (\r\n    <CurrentRoomContext.Provider value={data}>\r\n      {children}\r\n    </CurrentRoomContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCurrentRoom = (selector) => useContextSelector(CurrentRoomContext, selector);","/* eslint-disable consistent-return */\r\nimport React from 'react';\r\nimport { Badge, Tooltip, Whisper } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n  if (!presence) {\r\n    return 'gray';\r\n  }\r\n\r\n  switch (presence.state) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'gray';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\n\r\nconst getText = presence => {\r\n  if (!presence) {\r\n    return 'unknown State';\r\n  }\r\n\r\n  return presence.state === 'online'\r\n    ? 'Online'\r\n    : `Last Online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\nconst PresenceDot = ({ uid }) => {\r\n  const presence = usePresence(uid);\r\n\r\n  return (\r\n    <div>\r\n      <Whisper\r\n        placement=\"top\"\r\n        trigger=\"hover\"\r\n        speaker={\r\n          <Tooltip>\r\n            <i>{getText(presence)}</i>\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <Badge\r\n          className=\"cursor-pointer\"\r\n          style={{\r\n            backgroundColor: getColor(presence),\r\n          }}\r\n        />\r\n      </Whisper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PresenceDot;\r\n","import React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\n\r\nconst ProfileInfoBtnModal = ({ profile, children ,...btnProps }) => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { name, avatar, createdAt } = profile;\r\n  const memeberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n  const shortName = profile.name;\r\n\r\n  return (\r\n    <div>\r\n      <Button {...btnProps} onClick={open} >{shortName}</Button>\r\n\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{shortName} Profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <ProfileAvatar\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n          <h4 className=\"mt-2\">{shortName}</h4>\r\n          <p>Memeber since {memeberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {children}\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfoBtnModal;\r\n","import React, { memo } from 'react';\r\nimport { Button } from 'rsuite';\r\nimport TimeAgo from 'timeago-react';\r\nimport { useCurrentRoom } from '../../../context/current-room-context';\r\nimport { auth } from '../../../misc/firebase';\r\nimport PresenceDot from '../../PresenceDot';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\n\r\nconst MessageItem = ({ message , handleAdmin }) => {\r\n  const { author, createdAt, text } = message;\r\n\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const admins = useCurrentRoom(v => v.admins);\r\n  const isMsgAuthorAdmin = admins.includes(author.uid);\r\n  const isAuthor = auth.currentUser.uid === author.uid;\r\n  const canGrantAdmin = isAdmin && !isAuthor\r\n\r\n\r\n  return (\r\n    <li className=\"padded mb-1\">\r\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\r\n\r\n        <PresenceDot uid = {author.uid}/>\r\n        <ProfileAvatar\r\n          src={author.avatar}\r\n          name={author.name}\r\n          className=\"ml-1\"\r\n          size=\"xs\"\r\n        >\r\n         { canGrantAdmin && <Button block onClick={()=> handleAdmin(author.uid)} color='blue'>\r\n          {isMsgAuthorAdmin ? 'Remove Admin Permission' : 'Give Admin Permission'}\r\n          </Button>}\r\n        </ProfileAvatar>\r\n\r\n        <ProfileInfoBtnModal profile={author} appearance='link' className='ml-1 p-0 text-black'/>\r\n        <TimeAgo\r\n          datetime={createdAt}\r\n          className=\"font-normal text-black-45 ml-2\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <span className=\"word-break-all\">{text}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default memo(MessageItem);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert } from 'rsuite';\r\nimport { database } from '../../../misc/firebase';\r\nimport { transformtoArrwithId } from '../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst Messages = () => {\r\n  const { chatId } = useParams();\r\n  const [messages, setMessages] = useState(null);\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  useEffect(() => {\r\n    const messageRef = database.ref('/messages');\r\n\r\n    messageRef\r\n      .orderByChild('roomId')\r\n      .equalTo(chatId)\r\n      .on('value', snap => {\r\n        const data = transformtoArrwithId(snap.val());\r\n        setMessages(data);\r\n      });\r\n\r\n    return () => {\r\n      messageRef.off('value');\r\n    };\r\n  }, [ chatId ]);\r\n    \r\n    let alertMsg;\r\n\r\n    const handleAdmin = useCallback( async (uid) => {\r\n        const adminRef = database.ref(`rooms/${chatId}/admins`);\r\n\r\n        await adminRef.transaction(admins => {\r\n            if (admins) {\r\n                if (admins[uid]) {\r\n                    admins = null;\r\n                    alertMsg = 'Admin Permission removed'\r\n                }\r\n                else {\r\n                    admins[ uid ] = true;\r\n                    alertMsg = 'Admin Permission granted'\r\n                }\r\n            }\r\n            return admins;\r\n        })\r\n\r\n        Alert.info(alertMsg ,4000)\r\n  }, [chatId]);\r\n\r\n  return (\r\n    <ul className=\"msg-list custom-scroll\">\r\n      {isChatEmpty && <li>No messages yet</li>}\r\n      {canShowMessages &&\r\n        messages.map(msg => <MessageItem key={msg.id} message={msg} handleAdmin={handleAdmin} />)}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { memo } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room-context';\r\nimport { useMediaQuery, useModalState } from '../../../misc/custom-hooks';\r\nimport { database } from '../../../misc/firebase';\r\nimport EditableInput from '../../dashboard/EditableInput';\r\n\r\nconst EditRoomBtnDrawer = () => {\r\n  const { isOpen, open, close } = useModalState();\r\n  const { chatId } = useParams();\r\n  const isMobile = useMediaQuery('(max-width : 992px)')\r\n\r\n  const name = useCurrentRoom(v => v.name);\r\n  const description = useCurrentRoom(v => v.description);\r\n\r\n  const updateData = (key, value) => {\r\n    database.ref(`rooms/${chatId}`).child(key).set(value).then(() => {\r\n      Alert.success('Successfully Updated', 4000);\r\n      \r\n    }).catch(err => {\r\n      Alert.error(err.message, 4000)\r\n    })\r\n  };\r\n\r\n  const onNameSave = newName => {\r\n    updateData('name', newName);\r\n  };\r\n\r\n  const onDescriptionSave = newDesc => {\r\n    updateData('description', newDesc);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\r\n        A\r\n      </Button>\r\n\r\n      <Drawer full={isMobile} show={isOpen} onHide={close}>\r\n        <Drawer.Header>\r\n          <Drawer.Title>Edit Room</Drawer.Title>\r\n        </Drawer.Header>\r\n        <Drawer.Body>\r\n          <EditableInput\r\n            initialValue={name}\r\n            onSave={onNameSave}\r\n            label={<h6 className=\"mb-2\">Name</h6>}\r\n            emptyMsg=\"Name cannot be empty \"\r\n          />\r\n          <EditableInput\r\n            componentClass=\"textarea\"\r\n            rows={5}\r\n            initialValue={description}\r\n            onSave={onDescriptionSave}\r\n            label={<h6 className=\"mb-2\">Description</h6>}\r\n            emptyMsg=\"Description cannot be empty \"\r\n            wrapperClassName=\"mt-3\"\r\n          />\r\n        </Drawer.Body>\r\n        <Drawer.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Drawer.Footer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n","import React, { memo } from 'react'\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room-context'\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nconst RoomInfobBtnModal = () => {\r\n    const { isOpen , open , close} = useModalState();\r\n    const description = useCurrentRoom(v => v.description);\r\n    const name = useCurrentRoom(v => v.name);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button appearance='link' className='px-0'onClick={open}>\r\n                Room Information\r\n            </Button>\r\n            <Modal show={isOpen} onHide={close} >\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        About {name}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <h6 className='mb-1'>Description </h6>\r\n                    <p>{description}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button block onClick={close}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(RoomInfobBtnModal)\r\n","import React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonToolbar, Icon } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room-context';\r\nimport { useMediaQuery } from '../../../misc/custom-hooks';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\nimport RoomInfobBtnModal from './RoomInfobBtnModal';\r\n\r\nconst ChatTop = () => {\r\n  const name = useCurrentRoom(v => v.name);\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin)\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <h4 className=\"text-disappear d-flex align-items-center\">\r\n          <Icon\r\n            componentClass={Link}\r\n            to=\"/\"\r\n            icon=\"arrow-circle-left\"\r\n            size=\"2x\"\r\n            className={\r\n              isMobile\r\n                ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                : 'd-none'\r\n            }\r\n          />\r\n          <span className=\"text-disappear\">{name}</span>\r\n        </h4>\r\n        <ButtonToolbar className=\"ws-nowrap\">\r\n          { isAdmin &&\r\n            <EditRoomBtnDrawer />}\r\n        </ButtonToolbar>\r\n      </div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n        <span>todo</span>\r\n        <RoomInfobBtnModal />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(ChatTop);\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport Messages from '../../components/chat-window/messages';\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport { CurrentRoomProvider } from '../../context/current-room-context';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport { auth } from '../../misc/firebase';\r\nimport { transformtoArr } from '../../misc/helpers';\r\n\r\nconst Chat = () => {\r\n  const { chatId } = useParams();\r\n\r\n  const rooms = useRooms();\r\n\r\n  if (!rooms) {\r\n    return <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />;\r\n  }\r\n\r\n  const currentRoom = rooms.find(room => room.id === chatId);\r\n\r\n  if (!currentRoom) {\r\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n\r\n  const admins = transformtoArr(currentRoom.admins);\r\n  const isAdmin = admins.includes(auth.currentUser.uid);\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admins,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"chat-bottom\">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router';\r\nimport { Col, Grid, Row } from 'rsuite';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\nimport Chat from './Chat';\r\n\r\nconst Home = () => {\r\n  const isDesktop = useMediaQuery('(min-width : 992px)');\r\n\r\n  const { isExact } = useRouteMatch();\r\n\r\n  const canRenderSidebar = isDesktop || isExact;\r\n\r\n  return (\r\n    <RoomsProvider>\r\n      <Grid fluid className=\"h-100\">\r\n        <Row className=\"h-100\">\r\n          {canRenderSidebar && (\r\n            <Col xs={24} md={8} className=\"h-100\">\r\n              <Sidebar />\r\n            </Col>\r\n          )}\r\n          <Switch>\r\n            <Route exact path=\"/chat/:chatId\">\r\n              <Col xs={24} md={16} className=\"h-100\">\r\n                <Chat />\r\n              </Col>\r\n            </Route>\r\n            <Route>\r\n              {isDesktop && (\r\n                <Col xs={24} md={16} className=\"h-100\">\r\n                  <h6 className=\"text-center mt-page\">Please Select Chat</h6>\r\n                </Col>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </Row>\r\n      </Grid>\r\n    </RoomsProvider>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const {profile, isLoading} = useProfile();\r\n\r\n    if (isLoading && !profile) {\r\n        return <Container>\r\n            <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\"/>\r\n        </Container>\r\n    }\r\n    \r\n  if (!profile && !isLoading) {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nconst PublicRoute = ({ children, ...routeProps }) => {\r\n    const {profile , isLoading} = useProfile();\r\n\r\n    if (isLoading && !profile) {\r\n      return (\r\n        <Container>\r\n          <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n        </Container>\r\n      );\r\n    }\r\n\r\n  if (profile && !isLoading) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return <Route {...routeProps}>{children}</Route>;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\nimport { Switch } from 'react-router';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport SignIn from './pages/SignIn';\nimport './styles/main.scss';\nimport Home from './pages/Home';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport {ProfileProvider} from './context/profile.context'\n\nfunction App() {\n  return (\n    <ProfileProvider>\n    <Switch>\n      <PublicRoute path=\"/signin\">\n        <SignIn />\n      </PublicRoute>\n      <PrivateRoute path=\"/\">\n        <Home />\n      </PrivateRoute>\n    </Switch>\n    </ProfileProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}